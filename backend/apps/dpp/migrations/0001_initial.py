# Generated by Django 3.2.25 on 2025-05-06 16:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
# Tymczasowo usuniÄ™te - problem z kluczem szyfrowania
# import encrypted_model_fields.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('issuing_body', models.CharField(max_length=255, verbose_name='Issuing body')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('certificate_type', models.CharField(max_length=100, verbose_name='Certificate type')),
                ('valid_from', models.DateField(verbose_name='Valid from')),
                ('valid_until', models.DateField(blank=True, null=True, verbose_name='Valid until')),
                ('verification_url', models.URLField(blank=True, null=True, verbose_name='Verification URL')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_certificates', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
            options={
                'verbose_name': 'Certificate',
                'verbose_name_plural': 'Certificates',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_recyclable', models.BooleanField(default=False, verbose_name='Is recyclable')),
                ('recycling_instructions', models.TextField(blank=True, null=True, verbose_name='Recycling instructions')),
                ('environmental_impact', models.TextField(blank=True, null=True, verbose_name='Environmental impact')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_materials', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
            options={
                'verbose_name': 'Material',
                'verbose_name_plural': 'Materials',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('tax_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tax ID')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Is verified')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_organizations', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=255, verbose_name='Product name')),
                ('description', models.TextField(verbose_name='Description')),
                ('model_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Model number')),
                ('sku', models.CharField(blank=True, max_length=100, null=True, verbose_name='SKU')),
                ('barcode', models.CharField(blank=True, max_length=100, null=True, verbose_name='Barcode')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Weight (g)')),
                ('dimensions', models.CharField(blank=True, max_length=100, null=True, verbose_name='Dimensions')),
                ('manufacturing_date', models.DateField(blank=True, null=True, verbose_name='Manufacturing date')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Expiry date')),
                ('carbon_footprint', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Carbon footprint (kg CO2)')),
                ('is_hazardous', models.BooleanField(default=False, verbose_name='Is hazardous')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/', verbose_name='Product image')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='ProductInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('serial_number', models.CharField(max_length=100, unique=True, verbose_name='Serial number')),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes/', verbose_name='QR Code')),
                ('manufacturing_batch', models.CharField(blank=True, max_length=100, null=True, verbose_name='Manufacturing batch')),
                ('is_sold', models.BooleanField(default=False, verbose_name='Is sold')),
                ('sold_date', models.DateField(blank=True, null=True, verbose_name='Sold date')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_product_instances', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('current_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_products', to='dpp.organization', verbose_name='Current owner')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='dpp.product')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_product_instances', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Product instance',
                'verbose_name_plural': 'Product instances',
            },
        ),
        migrations.CreateModel(
            name='ProductPassport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Product name', max_length=255)),
                ('qr_code', models.CharField(help_text='Unique QR code for product identification', max_length=100, unique=True)),
                ('sustainability_data', models.TextField(help_text='Text data containing sustainability information in compliance with EU regulations')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Product Passport',
                'verbose_name_plural': 'Product Passports',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='SupplyChainEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('event_type', models.CharField(choices=[('manufacturing', 'Manufacturing'), ('packaging', 'Packaging'), ('distribution', 'Distribution'), ('retail', 'Retail'), ('recycling', 'Recycling'), ('disposal', 'Disposal')], max_length=50, verbose_name='Event type')),
                ('location', models.CharField(blank=True, max_length=255, null=True, verbose_name='Location')),
                ('date', models.DateTimeField(verbose_name='Event date')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_supply_chain_events', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supply_chain_events', to='dpp.organization')),
                ('product_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supply_chain_events', to='dpp.productinstance')),
            ],
            options={
                'verbose_name': 'Supply chain event',
                'verbose_name_plural': 'Supply chain events',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='RepairRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('repair_date', models.DateField(verbose_name='Repair date')),
                ('issue', models.TextField(verbose_name='Issue')),
                ('solution', models.TextField(verbose_name='Solution')),
                ('parts_replaced', models.TextField(blank=True, null=True, verbose_name='Parts replaced')),
                ('technician', models.CharField(blank=True, max_length=255, null=True, verbose_name='Technician')),
                ('warranty_covered', models.BooleanField(default=False, verbose_name='Warranty covered')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Cost')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_repair_records', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('product_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repair_records', to='dpp.productinstance')),
                ('repair_shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repair_records', to='dpp.organization')),
            ],
            options={
                'verbose_name': 'Repair record',
                'verbose_name_plural': 'Repair records',
                'ordering': ['-repair_date'],
            },
        ),
        migrations.CreateModel(
            name='RecyclingInstruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('disassembly_steps', models.TextField(verbose_name='Disassembly steps')),
                ('recyclable_parts', models.TextField(verbose_name='Recyclable parts')),
                ('hazardous_parts', models.TextField(blank=True, null=True, verbose_name='Hazardous parts')),
                ('special_handling', models.TextField(blank=True, null=True, verbose_name='Special handling')),
                ('recyclability_rating', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Recyclability rating (1-10)')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_recycling_instructions', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='recycling_instruction', to='dpp.product')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_recycling_instructions', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'Recycling instruction',
                'verbose_name_plural': 'Recycling instructions',
            },
        ),
        migrations.CreateModel(
            name='ProductMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Percentage')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_product_materials', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_instances', to='dpp.material')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_materials', to='dpp.product')),
            ],
            options={
                'verbose_name': 'Product material',
                'verbose_name_plural': 'Product materials',
                'unique_together': {('product', 'material')},
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_categories', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='dpp.productcategory', verbose_name='Parent category')),
            ],
            options={
                'verbose_name': 'Product category',
                'verbose_name_plural': 'Product categories',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='dpp.productcategory', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='product',
            name='certificates',
            field=models.ManyToManyField(blank=True, related_name='products', to='dpp.Certificate'),
        ),
        migrations.AddField(
            model_name='product',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_products', to=settings.AUTH_USER_MODEL, verbose_name='Created by'),
        ),
        migrations.AddField(
            model_name='product',
            name='manufacturer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manufactured_products', to='dpp.organization', verbose_name='Manufacturer'),
        ),
        migrations.AddField(
            model_name='product',
            name='materials',
            field=models.ManyToManyField(related_name='products', through='dpp.ProductMaterial', to='dpp.Material'),
        ),
        migrations.AddField(
            model_name='product',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_products', to=settings.AUTH_USER_MODEL, verbose_name='Updated by'),
        ),
    ]
